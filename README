

	Works System' agent code for OIC remote access client contributions are shared under the Apache 2.0 license
      
	 This agent is used to support XEP-0047 basing on libstrophe & iotivity.  This agent support IBB responder accepts session and get session information, such as Sid/Block-size from IBB Initiator.
   
	 There is no limitation for the length of the IBB stanza, and the block size can be negotiated and handled by the both peers.

        Known issues: multi-sessions support is not fully verified yet. It will be supported in near future.


====  How to make  wks_raclient for MT7688 ==========

1.   
	a.  Build libraries by yourself.
	
	please make openssl,liboctbstack.a, libexpat, libstrophe in order.Please reference the build steps in misc/ for each library in detail.

 	b. Use the compiled libraries
	
	Just follow instructions as below.


2.  Make sure gcc location in  ./build/Makefile. 
  
    For MT7683, it might be:

	CC = /opt/buildroot-gcc492_arm_glibc/usr/bin/arm-linux-gcc

    For MT7688/ MT7628

	MT7628_CC = /opt/buildroot-gcc463/usr/bin/mipsel-linux-gcc

	     
3.  Make and generate wks_raclient under ./build/bin

	a.  For MT7683

    	cd  ./build
    	make clean; make
    	cp bin/wks_raclient  /to_romfs_path/ 

	b. For MT7628/MT7688
    
   	cd ./build
   	make clean;make mt7628
   	cp bin/wks_raclient  /to_romfs_path/



==== How to run the wks_raclient ====

1. Make sure the nameserver is set. For example:
     
     #  echo  "nameserver 8.8.8.8"  > /etc/resolv.conf

2. For MT7628/MT7688, make sure the libexpat.so.1 is in /lib.
  
     #  cp /mnt/nfs/libexpat.so.1.6.0 /lib/libexpat.so.1

   For MT7683, copy  libpthread.so.0 to /lib, the libpthread.so.0 
   locates in "/opt/buildroot-gcc492_arm_glibc/usr/arm-buildroot-linux-gnueabi/
   sysroot/lib/libpthread.so.0"
 
    #  cp /mnt/nfs/libpthread.so.0 /lib

3. Run the program with specified interface:

    #  ./mnt/nfs/wks_raclient br0



======  FAQ  =========

1. If the resources can not be discoveried,make sure 
   multicast routing available.
  
   # route add -net 224.0.0.0 netmask 224.0.0.0 eth2
   # route add default gw 172.16.1.254




  
